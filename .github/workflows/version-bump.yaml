name: Version bump on PR

on:
  pull_request:
    types: [opened, reopened, synchronize, labeled, ready_for_review]
    branches: ["**"]

permissions:
  contents: write
  pull-requests: write

jobs:
  bump:
    # only for branches in this repo, not forks; and skip drafts
    if: github.event.pull_request.head.repo.full_name == github.repository && !github.event.pull_request.draft
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Decide bump level & compute next version
        id: prep
        shell: bash
        run: |
          set -euo pipefail
          labels=$(jq -r '.pull_request.labels[].name' "$GITHUB_EVENT_PATH" | paste -sd, - || true)
          bump=patch
          case "$labels" in
            *release:major*) bump=major ;;
            *release:minor*) bump=minor ;;
          esac

          current=$(jq -r .version manifest.json)
          IFS='.' read -r MA MI PA <<<"$current"
          case "$bump" in
            major) MA=$((MA+1)); MI=0; PA=0 ;;
            minor) MI=$((MI+1)); PA=0 ;;
            patch) PA=$((PA+1)) ;;
          esac
          next="${MA}.${MI}.${PA}"
          echo "next=$next" >> "$GITHUB_OUTPUT"

      - name: Apply version bump to files
        run: |
          jq --arg v "${{ steps.prep.outputs.next }}" '.version=$v' manifest.json > manifest.tmp && mv manifest.tmp manifest.json
          if jq -e '.version' package.json >/dev/null 2>&1; then
            jq --arg v "${{ steps.prep.outputs.next }}" '.version=$v' package.json > package.tmp && mv package.tmp package.json
          fi

      - name: Commit & push back to PR branch
        env:
          BRANCH: ${{ github.head_ref }}
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add manifest.json package.json 2>/dev/null || true
          git commit -m "chore: bump version to ${{ steps.prep.outputs.next }}" || exit 0
          git push origin HEAD:$BRANCH

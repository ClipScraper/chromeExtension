name: Release & Publish (CWS)

on:
  push:
    tags:
      - 'v*'            # push a tag like v1.2.3 to trigger

jobs:
  build-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write   # needed to create the GitHub Release

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      # Sync versions from the tag (vX.Y.Z) into package.json and manifest.json
      - name: Set version from tag
        run: |
          VERSION="${GITHUB_REF_NAME#v}"
          jq --arg v "$VERSION" '.version=$v' package.json > package.json.tmp && mv package.json.tmp package.json
          jq --arg v "$VERSION" '.version=$v' manifest.json > manifest.json.tmp && mv manifest.json.tmp manifest.json
          echo "Version set to $VERSION"

      - name: Install deps
        run: npm ci

      # Build your production bundle
      - name: Build
        run: npm run build:prod

      # Package to ZIP (uses your existing script)
      - name: Package ZIP
        run: ./scripts/package.sh production

      - name: Locate ZIP
        id: artifact
        run: |
          ZIP=$(ls -1 release/*.zip | head -n1)
          echo "zip_path=$ZIP" >> $GITHUB_OUTPUT
          echo "Found: $ZIP"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.artifact.outputs.zip_path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload the ZIP to the Chrome Web Store
      - name: Upload to CWS
        run: |
          npx --yes chrome-webstore-upload-cli@3 \
            upload \
            --source "${{ steps.artifact.outputs.zip_path }}" \
            --extension-id "${{ secrets.CWS_EXTENSION_ID }}" \
            --client-id "${{ secrets.CWS_CLIENT_ID }}" \
            --client-secret "${{ secrets.CWS_CLIENT_SECRET }}" \
            --refresh-token "${{ secrets.CWS_REFRESH_TOKEN }}"

      # Publish it (respects existing "Unlisted" visibility)
      - name: Publish on CWS
        run: |
          npx --yes chrome-webstore-upload-cli@3 \
            publish \
            --extension-id "${{ secrets.CWS_EXTENSION_ID }}" \
            --client-id "${{ secrets.CWS_CLIENT_ID }}" \
            --client-secret "${{ secrets.CWS_CLIENT_SECRET }}" \
            --refresh-token "${{ secrets.CWS_REFRESH_TOKEN }}"
